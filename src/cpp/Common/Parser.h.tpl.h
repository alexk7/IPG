// This file automatically generated by template-converter:
//    /usr/local/bin/template-converter Parser.h.tpl /Users/alexk7/ipg/build/xcode/../../src/tpl/Parser.h.tpl /Users/alexk7/ipg/build/xcode/../../src/cpp/Common/Parser.h.tpl.h
//
// DO NOT EDIT!

#ifndef PARSER_H_TPL_H_
#define PARSER_H_TPL_H_

#include <string>

const std::string Parser_h_tpl (
"// This file was automatically generated by IPG\n"
"// DO NOT EDIT!\n"
"#ifndef PEGPARSER_H\n"
"#define PEGPARSER_H{{BI_NEWLINE}}\n"
"\n"
"#include <vector>\n"
"#include <map>{{BI_NEWLINE}}\n"
"\n"
"namespace {{name}}\n"
"{\n"
"	enum PTNodeType\n"
"	{\n"
"		{{#def}}\n"
"		PTNodeType_{{name}} = {{value}},\n"
"		{{/def}}\n"
"	};{{BI_NEWLINE}}\n"
"\n"
"	struct Node;\n"
"	typedef std::map<PTNodeType, Node*> PTNodeTypeToPtr;{{BI_NEWLINE}}\n"
"\n"
"	struct Node\n"
"	{\n"
"		char value;\n"
"		PTNodeTypeToPtr end;\n"
"	};{{BI_NEWLINE}}\n"
"	\n"
"	typedef std::pair<PTNodeType, Node*> PTNodeChild;\n"
"	typedef std::vector<PTNodeChild> PTNodeChildren;{{BI_NEWLINE}}\n"
"\n"
"	Node* Parse(PTNodeType _type, Node* _symbol);\n"
"	Node* Traverse(PTNodeType _type, Node* _symbol, PTNodeChildren& _children);\n"
"}{{BI_NEWLINE}}\n"
"\n"
"#endif\n"
);

#endif /* PARSER_H_TPL_H_ */
